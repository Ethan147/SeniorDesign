


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             |.text|, CODE, READONLY
    3 00000000         
    4 00000000                 IMPORT           RunPt
    5 00000000                 IMPORT           NextPt
    6 00000000                 EXPORT           StartOS
    7 00000000                 EXPORT           PendSV_Handler
    8 00000000         
    9 00000000 480F    StartOS LDR              R0, =RunPt  ;page 179
   10 00000002 6802            LDR              R2, [R0]
   11 00000004 F8D2 D000       LDR              SP, [R2]
   12 00000008 E8BD 0FF0       POP              {R4-R11}
   13 0000000C BC0F            POP              {R0-R3}
   14 0000000E F85D CB04       POP              {R12}
   15 00000012 F85D EB04       POP              {LR}
   16 00000016 F85D EB04       POP              {LR}
   17 0000001A BC02            POP              {R1}
   18 0000001C B662            CPSIE            I
   19 0000001E 4770            BX               LR
   20 00000020         
   21 00000020         PendSV_Handler                       ;1) saves R0-R3, R1
                                                            2, LR, PC, PSR
   22 00000020 B672            CPSID            I           ;2) prevent interru
                                                            pt during switch
   23 00000022 E92D 0FF0       PUSH             {R4-R11}    ;3) save remaining 
                                                            regs R4-R11
   24 00000026 4806            LDR              R0, =RunPt  ;4) R0 = pointer to
                                                             RunPt, old thread 
                                                            
   25 00000028 6801            LDR              R1, [R0]    ;   R1 = RunPt
   26 0000002A F8C1 D000       STR              SP, [R1]    ;5) Save SP into TC
                                                            B
   27 0000002E 4905            LDR              R1, =NextPt ;6) R1 = pointer to
                                                             NextPt
   28 00000030 6809            LDR              R1, [R1]    ;6) R1= NextPt
   29 00000032 6001            STR              R1, [R0]    ;   RunPt = R1
   30 00000034 F8D1 D000       LDR              SP, [R1]    ;7) new thread SP; 
                                                            SP = RunPt-> SP
   31 00000038 E8BD 0FF0       POP              {R4-R11}    ;8) restore regs R4
                                                            -R11
   32 0000003C B662            CPSIE            I           ;9) tasks run with 
                                                            interrupts enabled
   33 0000003E 4770            BX               LR          ;10) restore R0-R3,
                                                             R12, LR, PC, PSR
   34 00000040         
   35 00000040         ;*******************************************************
                       ***********************
   36 00000040         ;
   37 00000040         ; Make sure the end of this section is aligned.
   38 00000040         ;
   39 00000040         ;*******************************************************
                       ***********************
   40 00000040                 ALIGN
   41 00000040         
   42 00000040         ;*******************************************************
                       ***********************
   43 00000040         ;
   44 00000040         ; Tell the assembler that we're done.
   45 00000040         ;



ARM Macro Assembler    Page 2 


   46 00000040         ;*******************************************************
                       ***********************
   47 00000040                 END
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\osasm.
d -o.\osasm.o -I"C:\Program Files (x86)\Keil\ARM\RV31\INC" -I"C:\Program Files 
(x86)\Keil\ARM\CMSIS\Include" -I"C:\Program Files (x86)\Keil\ARM\Inc\TI\TM4C123
" --predefine="__EVAL SETA 1" --list=.\osasm.lst OSasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 2 in file OSasm.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000020

Symbol: PendSV_Handler
   Definitions
      At line 21 in file OSasm.s
   Uses
      At line 7 in file OSasm.s
Comment: PendSV_Handler used once
StartOS 00000000

Symbol: StartOS
   Definitions
      At line 9 in file OSasm.s
   Uses
      At line 6 in file OSasm.s
Comment: StartOS used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

NextPt 00000000

Symbol: NextPt
   Definitions
      At line 5 in file OSasm.s
   Uses
      At line 27 in file OSasm.s
Comment: NextPt used once
RunPt 00000000

Symbol: RunPt
   Definitions
      At line 4 in file OSasm.s
   Uses
      At line 9 in file OSasm.s
      At line 24 in file OSasm.s

2 symbols
338 symbols in table
